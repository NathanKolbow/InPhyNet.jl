```{julia}
include("../pipelines.jl")
```

## One NNI move on each constraint

```{julia}
nsim = 1000
dists = Array{Int64}(undef, nsim)
constraintdiffs = Array{Int64}(undef, 4, nsim)
for i=1:nsim
    if (i % 100) == 0 && i != 0 @show i end
    truenet, constraints = loadTrueData("n40h4")
    for (j, c) in enumerate(constraints)
        origc = readTopology(writeTopology(c))
        e = sample(c.edge, 1, replace=false)[1]
        nni!(c, e)
        constraintdiffs[j, i] = hardwiredClusterDistance(origc, c, false)
    end

    mnet = runGroundTruthPipeline(truenet, constraints)
    dists[i] = hardwiredClusterDistance(truenet, mnet, false)
end
```

Merged net errors are very closely in line with the sum of induced errors

```{julia}
plotNNIErrors(dists, constraintdiffs)
```

## Two NNI moves on each constraint

```{julia}
nsim = 1000
dists = Array{Int64}(undef, nsim)
constraintdiffs = Array{Int64}(undef, 4, nsim)
for i=1:nsim
    truenet, constraints = loadTrueData("n40h4")
    for (j, c) in enumerate(constraints)
        origc = readTopology(writeTopology(c))
        for _=1:2
            e = sample(c.edge, 1, replace=false)[1]
            nni!(c, e)
        end
        constraintdiffs[j, i] = hardwiredClusterDistance(origc, c, false)
    end

    mnet = runGroundTruthPipeline(truenet, constraints)
    dists[i] = hardwiredClusterDistance(truenet, mnet, false)
end
```

Still tracking closely, but worse

```{julia}
plotNNIErrors(dists, constraintdiffs)
```

## Three NNI moves on each constraint

```{julia}
nsim = 1000
dists = Array{Int64}(undef, nsim)
constraintdiffs = Array{Int64}(undef, 4, nsim)
for i=1:nsim
    truenet, constraints = loadTrueData("n40h4")
    for (j, c) in enumerate(constraints)
        origc = readTopology(writeTopology(c))
        for _=1:3
            e = sample(c.edge, 1, replace=false)[1]
            nni!(c, e)
        end
        constraintdiffs[j, i] = hardwiredClusterDistance(origc, c, false)
    end

    mnet = runGroundTruthPipeline(truenet, constraints)
    dists[i] = hardwiredClusterDistance(truenet, mnet, false)
end
```

This actually seems maybe a bit better than with two NNI moves, relatively speaking

```{julia}
plotNNIErrors(dists, constraintdiffs)
```

## TEN NNI moves on each constraint

```{julia}
nsim = 1000
dists = Array{Int64}(undef, nsim)
constraintdiffs = Array{Int64}(undef, 4, nsim)
for i=1:nsim
    truenet, constraints = loadTrueData("n40h4")
    for (j, c) in enumerate(constraints)
        origc = readTopology(writeTopology(c))
        for _=1:10
            e = sample(c.edge, 1, replace=false)[1]
            nni!(c, e)
        end
        constraintdiffs[j, i] = hardwiredClusterDistance(origc, c, false)
    end

    mnet = runGroundTruthPipeline(truenet, constraints)
    dists[i] = hardwiredClusterDistance(truenet, mnet, false)
end
```



```{julia}
plotNNIErrors(dists, constraintdiffs)
```