There is a HAVEN of bugs to be discovered here...

```{julia}
include("../pipelines.jl")
include("../robustness-fxns.jl")
truenet, constraints = loadTrueData("n40h4")
```

## Gaussian noise from N(0, 1)

```{julia}
errors = robustGauss(truenet, constraints, μ=0., σ=1.)
histogram(errors, labels=false, xlab="Merging error", ylab="Frequency")
```

## Gaussian noise from N(0, 4)

```{julia}
errors = robustGauss(truenet, constraints, μ=0., σ=4.)
histogram(errors, labels=false, xlab="Merging error", ylab="Frequency")
```

## Gaussian noise from N(2, 2)

```{julia}
errors = robustGauss(truenet, constraints, μ=2., σ=2.)
histogram(errors, labels=false, xlab="Merging error", ylab="Frequency")
```

## Uniform draw from -50% to +50% true value

Has crazy little effect...

```{julia}
errors = robustUniformProportion(truenet, constraints, 0.5)
histogram(errors, labels=false, xlab="Merging error", ylab="Frequency")
```

## Uniform draw from -75% to +75% true value

```{julia}
errors = robustUniformProportion(truenet, constraints, 0.75)
histogram(errors, labels=false, xlab="Merging error", ylab="Frequency")
```

## Distance matrix of completely random values

```{julia}
errors = robustRandD(truenet, constraints, nsim=10000)
length(errors)
#histogram(errors, labels=false, xlab="Merging error", ylab="Frequency")
```